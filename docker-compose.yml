networks:
  internal:
    driver: bridge

services:
  # === PostgreSQL Services ===
  postgres-auth:
    image: postgres:14
    container_name: postgres-auth
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: auth_service
    volumes:
      - ./postgres/auth-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d auth_service"]
      interval: 10s
      timeout: 5s
      retries: 30

  postgres-stat:
    image: postgres:14
    container_name: postgres-stat
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: stat_service
    volumes:
      - ./postgres/stat-data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d stat_service"]
      interval: 10s
      timeout: 5s
      retries: 30

  postgres-task:
    image: postgres:14
    container_name: postgres-task
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: task_service
    volumes:
      - ./postgres/task-data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d task_service"]
      interval: 10s
      timeout: 5s
      retries: 30

  # === ZooKeeper ===
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - internal

  # === Apache Kafka ===
  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_MESSAGE_MAX_BYTES: 20971520
      KAFKA_REPLICA_FETCH_MAX_BYTES: 20971520
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - internal
    healthcheck:
      test: ["CMD", "cat", "/proc/cpuinfo"]
      interval: 10s
      timeout: 10s
      retries: 30

  # === Kafka Topics Checker ===
  kafka-topics-check:
      image: confluentinc/cp-kafka:7.0.1
      container_name: kafka-topics-check
      networks:
        - internal
      depends_on:
        kafka:
          condition: service_healthy
      volumes:
        - ./kafka/check_topics.sh:/check_topics.sh
      entrypoint:
        - sh
        - /check_topics.sh
      restart: on-failure

  # === Auth Service ===
  migrate-auth:
    build:
      context: ./auth_service_laravel
    container_name: migrate-auth
    networks:
      - internal
    depends_on:
      postgres-auth:
        condition: service_healthy
    entrypoint:
      - sh
      - -c
      - |
        set -e
        echo "Running migrations for Auth Service..."
        sleep 5
        php artisan migrate --force
        echo "Auth Service migrations completed."

  auth-service:
    build:
      context: ./auth_service_laravel
    container_name: auth-service
    networks:
      - internal
    ports:
      - "8001:8000"
    depends_on:
      postgres-auth:
        condition: service_healthy
      migrate-auth:
        condition: service_completed_successfully
    command: php artisan serve --host=0.0.0.0 --port=8000

  auth-worker:
    build:
      context: ./auth_service_laravel
    container_name: auth-worker
    networks:
      - internal
    depends_on:
      postgres-auth:
        condition: service_healthy
    command: php artisan queue:work --tries=3 --timeout=60

  # === Task Service ===
  migrate-task:
    build:
      context: ./task_service_laravel
    container_name: migrate-task
    networks:
      - internal
    depends_on:
      postgres-task:
        condition: service_healthy
    entrypoint:
      - sh
      - -c
      - |
        set -e
        echo "Running migrations for Task Service..."
        sleep 5
        php artisan migrate --force
        echo "Task Service migrations completed."

  task-service:
    build:
      context: ./task_service_laravel
    container_name: task-service
    networks:
      - internal
    ports:
      - "8003:8000"
    depends_on:
      postgres-task:
        condition: service_healthy
      migrate-task:
        condition: service_completed_successfully
    command: php artisan serve --host=0.0.0.0 --port=8000

  task-worker:
    build:
      context: ./task_service_laravel
    container_name: task-worker
    networks:
      - internal
    depends_on:
      postgres-task:
        condition: service_healthy
    command: php artisan queue:work --tries=3 --timeout=60

  task-kafka-consumer:
    build:
      context: ./task_service_laravel
    container_name: task-kafka-consumer
    networks:
      - internal
    depends_on:
      postgres-task:
        condition: service_healthy
      kafka-topics-check:
        condition: service_completed_successfully
    command: php artisan kafka:consume

  # === Stat Service ===
  migrate-stat:
    build:
      context: ./stat_service_laravel
    container_name: migrate-stat
    networks:
      - internal
    depends_on:
      postgres-stat:
        condition: service_healthy
    entrypoint:
      - sh
      - -c
      - |
        set -e
        echo "Running migrations for Stat Service..."
        sleep 5
        php artisan migrate --force
        echo "Stat Service migrations completed."

  stat-service:
    build:
      context: ./stat_service_laravel
    container_name: stat-service
    networks:
      - internal
    ports:
      - "8002:8000"
    depends_on:
      postgres-stat:
        condition: service_healthy
      migrate-stat:
        condition: service_completed_successfully
    command: php artisan serve --host=0.0.0.0 --port=8000

  stat-kafka-consumer:
    build:
      context: ./stat_service_laravel
    container_name: stat-kafka-consumer
    networks:
      - internal
    depends_on:
      postgres-stat:
        condition: service_healthy
      kafka-topics-check:
        condition: service_completed_successfully
    command: php artisan kafka:consume
